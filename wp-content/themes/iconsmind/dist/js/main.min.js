"use strict";!function(){$(function(){$.each($(".drop-menu"),function(){new n($(this))}),$.each($(".message-field"),function(){new i($(this))}),$(document).on("invalid.wpcf7",function(){$(".contact-us__form").find("fieldset").removeClass("novalid"),$(".contact-us__form").find(".wpcf7-not-valid-tip").each(function(){$(this).parents("fieldset").addClass("novalid")})}),$.each($("#mc-embedded-subscribe-form"),function(){new e($(this))}),$.each($(".packages"),function(){new t($(this))})});var e=function(e){var n=e,i=e.data("thank"),t=$(".promo_inner").data("action"),a="",o=function(){n.on("submit",function(){return a=$("#mce-EMAIL").val(),a.length<4?s():($("#mce-EMAIL").removeClass("mce_inline_error"),c()),!1})},s=function(){$("#mce-EMAIL").addClass("mce_inline_error")},c=function(){$.ajax({url:t,data:{EMAIL:a,action:"mchimp"},type:"POST",dataType:"json",success:function(e){"success"==e.result?(n[0].reset(),window.location.href=i):s()},error:function(){s()}})},r=function(){o()};r()},n=function(e){var n,i,t=e,a=$(".site__header__menu-btn"),o=$(".site__header"),s=(t.find(".drop-menu__inner"),t.find("#scroll-wrap")),c=!1,r=$(".site"),d=$("html"),u=$(window),h=function(){a.on({click:function(){return o.hasClass("site__header_drop-menu")?(o.removeClass("site__header_drop-menu"),r.css({height:""}),setTimeout(function(){r.height()>u.height()&&d.css({"overflow-y":""}),u.scrollTop(i),$(s).getNiceScroll().hide()},10)):(o.addClass("site__header_drop-menu"),i=u.scrollTop(),o.removeClass("site__header_fixed-white"),setTimeout(function(){r.height()>u.height()&&d.css({"overflow-y":"scroll"}),setTimeout(function(){r.css({height:"100%"}),f()},10),setTimeout(function(){$(s).getNiceScroll().show(),$(s).getNiceScroll().resize()},310)},300)),!1}}),u.on({scroll:function(){c=u.scrollTop()>=o.innerHeight(),c?o.addClass("site__header_fixed-white"):o.removeClass("site__header_fixed-white")},load:function(){c?o.addClass("site__header_fixed-white"):o.removeClass("site__header_fixed-white")},DOMMouseScroll:function(e){var n=e.originalEvent.detail;if(n){var i=n>0?1:-1;l(i)}},mousewheel:function(e){var n=e.originalEvent.wheelDelta;if(n){var i=n>0?-1:1;l(i)}},touchmove:function(e){var i=e.originalEvent.touches[0].clientY;i>n?l(-1):i<n&&l(1),n=i},keydown:function(e){switch(e.which){case 32:l(1);break;case 33:l(-1);break;case 34:l(1);break;case 35:l(1);break;case 36:l(-1);break;case 38:l(-1);break;case 40:l(1);break;default:return}}})},l=function(e){e>0&&!o.hasClass("site__header_hidden")&&c&&!o.hasClass("site__header_drop-menu")&&o.addClass("site__header_hidden"),e<0&&o.hasClass("site__header_hidden")&&c&&o.removeClass("site__header_hidden")},f=function(){$(s).niceScroll({autohidemode:"false",cursorborder:"",cursorcolor:"#fff",cursorwidth:"6px",cursorborderradius:"0"})},_=function(){h()};_()},i=function(e){var n=e,i=n.find("textarea.contact-us__form__message"),t=n.find(".message-field__text"),a=n.find(".message-field__height"),o=function(){n.on({keydown:function(){t.html(i.val()+"___"),i.css("height",t.height()+25),a.css("height",t.height())}})},s=function(){o()};s()},t=function(e){var n=function(){$(".paddle_button").on("click",function(){var e=$(this).data("product"),n=$(this).data("product_name");console.log(n),dataLayer.push({event:"track-purchase-click",productid:e,productname:n})}),$(".pricing__license a").on("click",function(){dataLayer.push({event:"track-purchase-customize"})})},i=function(){window.dataLayer=window.dataLayer||[],n()};i()}}();
!function(){$(function(){$(".popup").each(function(){new o($(this))})});var o=function(o){var n=this,t=40,i=$(".popup__open"),e=o,p=e.find(".popup__close, .popup__cancel"),c=e.find(".popup__wrap"),u=e.find(".popup__content"),s=$("html"),d=$(window),a=setTimeout(function(){},1),f=function(){d.height()-2*t-c.height()>0?c.css({top:(d.height()-2*t-c.height())/2}):c.css({top:0})},r=function(){var o,n=document.createElement("div");return n.className="popup__scrollbar-measure",document.body.appendChild(n),o=n.offsetWidth-n.clientWidth,document.body.removeChild(n),o},l=function(){e.css({overflowY:"hidden"}),setTimeout(function(){s.css({overflowY:"auto",paddingRight:0})},400),e.removeClass("popup_opened"),e.addClass("popup_hide"),a=setTimeout(function(){e.css({overflowY:"auto"}),e.removeClass("popup_hide")},800)},h=function(){e[0].obj=n,_()},_=function(){d.on({resize:function(){f()}}),i.on({click:function(){return m($(this).attr("data-popup")),!1}}),c.on({click:function(o){o.stopPropagation()}}),e.on({click:function(){return l(),!1}}),p.on({click:function(){return l(),!1}})},m=function(o){v(o),setTimeout(function(){s.css({overflowY:"hidden",paddingRight:r()})},400),e.addClass("popup_opened"),f()},v=function(o){var n=u.filter(".popup__"+o);u.css({display:"none"}),n.css({display:"block"})};h()}}();
//# sourceMappingURL=data:application/json;base64,
