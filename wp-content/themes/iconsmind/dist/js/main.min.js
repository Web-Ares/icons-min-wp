"use strict";!function(){$(function(){$.each($(".drop-menu"),function(){new e($(this))}),$.each($(".message-field"),function(){new i($(this))})});var e=function(e){var i,s,n=e,t=$(".site__header__menu-btn"),o=$(".site__header"),r=(n.find(".drop-menu__inner"),n.find("#scroll-wrap")),a=!1,c=$(".site"),d=$("html"),h=$(window),_=function(){t.on({click:function(){return o.hasClass("site__header_drop-menu")?(o.removeClass("site__header_drop-menu"),c.css({height:""}),h.scrollTop(s),d.css({"overflow-y":""}),$(r).getNiceScroll().hide()):(o.addClass("site__header_drop-menu"),s=h.scrollTop(),o.removeClass("site__header_fixed-white"),setTimeout(function(){c.css({height:"100%"}),d.css({"overflow-y":"scroll"}),u(),setTimeout(function(){$(r).getNiceScroll().show(),$(r).getNiceScroll().resize()},300)},300)),!1}}),h.on({scroll:function(){a=h.scrollTop()>=o.innerHeight(),a?o.addClass("site__header_fixed-white"):o.removeClass("site__header_fixed-white")},load:function(){a?o.addClass("site__header_fixed-white"):o.removeClass("site__header_fixed-white")},DOMMouseScroll:function(e){var i=e.originalEvent.detail;if(i){var s=i>0?1:-1;l(s)}},mousewheel:function(e){var i=e.originalEvent.wheelDelta;if(i){var s=i>0?-1:1;l(s)}},touchmove:function(e){var s=e.originalEvent.touches[0].clientY;s>i?l(-1):s<i&&l(1),i=s},keydown:function(e){switch(e.which){case 32:l(1);break;case 33:l(-1);break;case 34:l(1);break;case 35:l(1);break;case 36:l(-1);break;case 38:l(-1);break;case 40:l(1);break;default:return}}})},l=function(e){e>0&&!o.hasClass("site__header_hidden")&&a&&!o.hasClass("site__header_drop-menu")&&o.addClass("site__header_hidden"),e<0&&o.hasClass("site__header_hidden")&&a&&o.removeClass("site__header_hidden")},u=function(){$(r).niceScroll({autohidemode:"false",cursorborder:"",cursorcolor:"#fff",cursorwidth:"6px",cursorborderradius:"0"})},f=function(){_()};f()},i=function(e){var i=e,s=i.find(".contact-us__form__message"),n=i.find(".message-field__text"),t=i.find(".message-field__height"),o=function(){i.on({keydown:function(){n.html(s.val()+"___"),s.css("height",n.height()+25),t.css("height",n.height())}})},r=function(){o()};r()}}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5tYWluLmpzIl0sIm5hbWVzIjpbIiQiLCJlYWNoIiwiTWVudSIsInRoaXMiLCJNZXNzYWdlSGlnaCIsIm9iaiIsIl9sYXN0UG9zIiwic2l0ZVNjcm9sbFRvcCIsIl9vYmoiLCJfYnRuIiwiX2hlYWRlciIsIl9tZW51Q29udGVudCIsImZpbmQiLCJfYWN0aW9uIiwiX3NpdGUiLCJfZG9tIiwiX3dpbmRvdyIsIndpbmRvdyIsIl9vbkV2ZW50cyIsIm9uIiwiY2xpY2siLCJoYXNDbGFzcyIsInJlbW92ZUNsYXNzIiwiY3NzIiwiaGVpZ2h0Iiwic2Nyb2xsVG9wIiwib3ZlcmZsb3cteSIsImdldE5pY2VTY3JvbGwiLCJoaWRlIiwiYWRkQ2xhc3MiLCJzZXRUaW1lb3V0IiwiX2luaXRDb250ZW50U2Nyb2xsIiwic2hvdyIsInJlc2l6ZSIsInNjcm9sbCIsImlubmVySGVpZ2h0IiwibG9hZCIsIkRPTU1vdXNlU2Nyb2xsIiwiZSIsImRlbHRhIiwib3JpZ2luYWxFdmVudCIsImRldGFpbCIsImRpcmVjdGlvbiIsIl9jaGVja1Njcm9sbCIsIm1vdXNld2hlZWwiLCJ3aGVlbERlbHRhIiwidG91Y2htb3ZlIiwiY3VycmVudFBvcyIsInRvdWNoZXMiLCJjbGllbnRZIiwia2V5ZG93biIsIndoaWNoIiwibmljZVNjcm9sbCIsImF1dG9oaWRlbW9kZSIsImN1cnNvcmJvcmRlciIsImN1cnNvcmNvbG9yIiwiY3Vyc29yd2lkdGgiLCJjdXJzb3Jib3JkZXJyYWRpdXMiLCJfaW5pdCIsIl9tZXNzYWdlIiwiX21lc3NhZ2VUZXh0IiwiX21lc3NhZ2VIZWlnaHQiLCJodG1sIiwidmFsIl0sIm1hcHBpbmdzIjoiQUFBQSxjQUNBLFdBRUlBLEVBQUcsV0FFQ0EsRUFBRUMsS0FBTUQsRUFBRyxjQUFnQixXQUN2QixHQUFLRSxHQUFNRixFQUFHRyxTQUdsQkgsRUFBRUMsS0FBTUQsRUFBRyxrQkFBb0IsV0FDM0IsR0FBSUksR0FBYUosRUFBR0csVUFLNUIsSUFBSUQsR0FB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a0MsRUFBUSxXQUNKeEMsSUFHUndDIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4oIGZ1bmN0aW9uKCl7XG5cbiAgICAkKCBmdW5jdGlvbigpIHtcblxuICAgICAgICAkLmVhY2goICQoICcuZHJvcC1tZW51JyApLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG5ldyAgTWVudSggJCggdGhpcyApICk7XG4gICAgICAgIH0gKTtcblxuICAgICAgICAkLmVhY2goICQoICcubWVzc2FnZS1maWVsZCcgKSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBuZXcgTWVzc2FnZUhpZ2goICQoIHRoaXMgKSApO1xuICAgICAgICB9ICk7XG5cbiAgICB9ICk7XG5cbiAgICB2YXIgTWVudSA9IGZ1bmN0aW9uICggb2JqICkge1xuICAgICAgICB2YXIgX29iaiA9IG9iaixcbiAgICAgICAgICAgIF9idG4gPSAkKCAnLnNpdGVfX2hlYWRlcl9fbWVudS1idG4nICksXG4gICAgICAgICAgICBfaGVhZGVyID0gJCggJy5zaXRlX19oZWFkZXInKSxcbiAgICAgICAgICAgIF9tZW51SW5uZXIgPSBfb2JqLmZpbmQoICcuZHJvcC1tZW51X19pbm5lcicgKSxcbiAgICAgICAgICAgIF9tZW51Q29udGVudCA9IF9vYmouZmluZCggJyNzY3JvbGwtd3JhcCcgKSxcbiAgICAgICAgICAgIF9hY3Rpb24gPSBmYWxzZSxcbiAgICAgICAgICAgIF9sYXN0UG9zLFxuICAgICAgICAgICAgc2l0ZVNjcm9sbFRvcCxcbiAgICAgICAgICAgIF9zaXRlID0gJCgnLnNpdGUnKSxcbiAgICAgICAgICAgIF9kb20gPSAkKCAnaHRtbCcgKSxcbiAgICAgICAgICAgIF93aW5kb3cgPSAkKCB3aW5kb3cgKTtcblxuICAgICAgICB2YXIgX29uRXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICBfYnRuLm9uKCB7XG4gICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoIF9oZWFkZXIuaGFzQ2xhc3MoICdzaXRlX19oZWFkZXJfZHJvcC1tZW51JyApICkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2hlYWRlci5yZW1vdmVDbGFzcyggJ3NpdGVfX2hlYWRlcl9kcm9wLW1lbnUnICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc2l0ZS5jc3MoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCc6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3dpbmRvdy5zY3JvbGxUb3AoIHNpdGVTY3JvbGxUb3AgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kb20uY3NzKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdvdmVyZmxvdy15JzogJydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCBfbWVudUNvbnRlbnQgKS5nZXROaWNlU2Nyb2xsKCkuaGlkZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2hlYWRlci5hZGRDbGFzcyggJ3NpdGVfX2hlYWRlcl9kcm9wLW1lbnUnICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXRlU2Nyb2xsVG9wID0gX3dpbmRvdy5zY3JvbGxUb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaGVhZGVyLnJlbW92ZUNsYXNzKCdzaXRlX19oZWFkZXJfZml4ZWQtd2hpdGUnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zaXRlLmNzcygge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCc6ICcxMDAlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2RvbS5jc3MoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdvdmVyZmxvdy15JzogJ3Njcm9sbCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pbml0Q29udGVudFNjcm9sbCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCBfbWVudUNvbnRlbnQgKS5nZXROaWNlU2Nyb2xsKCkuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggX21lbnVDb250ZW50ICkuZ2V0TmljZVNjcm9sbCgpLnJlc2l6ZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDMwMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAzMDApO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9ICk7XG4gICAgICAgICAgICAgICAgX3dpbmRvdy5vbigge1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGw6IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgX2FjdGlvbiA9IF93aW5kb3cuc2Nyb2xsVG9wKCkgPj0gX2hlYWRlci5pbm5lckhlaWdodCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggX2FjdGlvbiApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaGVhZGVyLmFkZENsYXNzKCdzaXRlX19oZWFkZXJfZml4ZWQtd2hpdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9oZWFkZXIucmVtb3ZlQ2xhc3MoJ3NpdGVfX2hlYWRlcl9maXhlZC13aGl0ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGxvYWQ6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggX2FjdGlvbiApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaGVhZGVyLmFkZENsYXNzKCdzaXRlX19oZWFkZXJfZml4ZWQtd2hpdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9oZWFkZXIucmVtb3ZlQ2xhc3MoJ3NpdGVfX2hlYWRlcl9maXhlZC13aGl0ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIERPTU1vdXNlU2Nyb2xsOiBmdW5jdGlvbiAoIGUgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IGUub3JpZ2luYWxFdmVudC5kZXRhaWw7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggZGVsdGEgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlyZWN0aW9uID0gKCBkZWx0YSA+IDAgKSA/IDEgOiAtMTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jaGVja1Njcm9sbCggZGlyZWN0aW9uICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBtb3VzZXdoZWVsOiBmdW5jdGlvbiAoIGUgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IGUub3JpZ2luYWxFdmVudC53aGVlbERlbHRhO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIGRlbHRhICkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpcmVjdGlvbiA9ICggZGVsdGEgPiAwICkgPyAtMSA6IDE7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY2hlY2tTY3JvbGwoIGRpcmVjdGlvbiApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG91Y2htb3ZlOiBmdW5jdGlvbiAoIGUgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50UG9zID0gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCBjdXJyZW50UG9zID4gX2xhc3RQb3MgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY2hlY2tTY3JvbGwoIC0xICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIGN1cnJlbnRQb3MgPCBfbGFzdFBvcyApIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jaGVja1Njcm9sbCggMSApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfbGFzdFBvcyA9IGN1cnJlbnRQb3M7XG5cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAga2V5ZG93bjogZnVuY3Rpb24gKCBlICkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2goIGUud2hpY2ggKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY2hlY2tTY3JvbGwoIDEgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzMzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NoZWNrU2Nyb2xsKCAtMSApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM0IDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NoZWNrU2Nyb2xsKCAxICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzUgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY2hlY2tTY3JvbGwoIDEgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzNiA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jaGVja1Njcm9sbCggLTEgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NoZWNrU2Nyb2xsKCAtMSApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY2hlY2tTY3JvbGwoIDEgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9jaGVja1Njcm9sbCA9IGZ1bmN0aW9uKCBkaXJlY3Rpb24gKSB7XG5cbiAgICAgICAgICAgICAgICBpZiggZGlyZWN0aW9uID4gMCAmJiAhX2hlYWRlci5oYXNDbGFzcyggJ3NpdGVfX2hlYWRlcl9oaWRkZW4nICkgJiYgX2FjdGlvbiAmJiAhX2hlYWRlci5oYXNDbGFzcyggJ3NpdGVfX2hlYWRlcl9kcm9wLW1lbnUnICkgKSB7XG4gICAgICAgICAgICAgICAgICAgIF9oZWFkZXIuYWRkQ2xhc3MoICdzaXRlX19oZWFkZXJfaGlkZGVuJyApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmKCBkaXJlY3Rpb24gPCAwICYmIF9oZWFkZXIuaGFzQ2xhc3MoICdzaXRlX19oZWFkZXJfaGlkZGVuJyApICYmIF9hY3Rpb24gKSB7XG4gICAgICAgICAgICAgICAgICAgIF9oZWFkZXIucmVtb3ZlQ2xhc3MoJ3NpdGVfX2hlYWRlcl9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfaW5pdENvbnRlbnRTY3JvbGwgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgICQoIF9tZW51Q29udGVudCApLm5pY2VTY3JvbGwoIHtcbiAgICAgICAgICAgICAgICAgICAgYXV0b2hpZGVtb2RlOiAnZmFsc2UnLFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3Jib3JkZXI6ICcnLFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3Jjb2xvcjogXCIjZmZmXCIsXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcndpZHRoOiBcIjZweFwiLFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3Jib3JkZXJyYWRpdXM6IFwiMFwiXG4gICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2luaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBfb25FdmVudHMoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgX2luaXQoKTtcblxuICAgIH07XG5cbiAgICB2YXIgTWVzc2FnZUhpZ2ggPSBmdW5jdGlvbiAoIG9iaiApIHtcblxuICAgICAgICB2YXIgX29iaiA9IG9iaixcbiAgICAgICAgICAgIF9tZXNzYWdlID0gX29iai5maW5kKCAnLmNvbnRhY3QtdXNfX2Zvcm1fX21lc3NhZ2UnICksXG4gICAgICAgICAgICBfbWVzc2FnZVRleHQgPSBfb2JqLmZpbmQoICcubWVzc2FnZS1maWVsZF9fdGV4dCcgKSxcbiAgICAgICAgICAgIF9tZXNzYWdlSGVpZ2h0ID0gX29iai5maW5kKCAnLm1lc3NhZ2UtZmllbGRfX2hlaWdodCcgKTtcblxuICAgICAgICB2YXIgX29uRXZlbnRzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICBfb2JqLm9uKCB7XG4gICAgICAgICAgICAgICAgICAgICdrZXlkb3duJyA6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBfbWVzc2FnZVRleHQuaHRtbCggX21lc3NhZ2UudmFsKCkgKyAnX19fJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgX21lc3NhZ2UuY3NzKCAnaGVpZ2h0JywgX21lc3NhZ2VUZXh0LmhlaWdodCgpICsgMjUgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9tZXNzYWdlSGVpZ2h0LmNzcyggJ2hlaWdodCcsIF9tZXNzYWdlVGV4dC5oZWlnaHQoKSApO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9ICk7XG5cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIF9pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgX29uRXZlbnRzKCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIF9pbml0KCk7XG4gICAgfTtcblxuXG59ICkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
